<?xml version="1.0" encoding="utf-8"?>
<HTTPSnapshot xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" id="60">
  <HTTPTask id="4536" hostname="diperf-wf1f52214.dispatcher.int.sap.hana.ondemand.com" path="/resources/~5cfddba6c4c93a9574da8795b231db9795ec15e1~/sap/watt/ideplatform/plugin/aceeditor/control/lib/ace-noconflict/mode-java.js" url="https://diperf-wf1f52214.dispatcher.int.sap.hana.ondemand.com/resources/~5cfddba6c4c93a9574da8795b231db9795ec15e1~/sap/watt/ideplatform/plugin/aceeditor/control/lib/ace-noconflict/mode-java.js" ip="172.16.59.30" port="443" connectionId="114" origin="Primary" frame="1" startDateTime="2017-09-26T14:11:36.414+03:00" startTime="2531674188" endTime="2531674266">
    <HTTPRequest method="GET">
      <HTTPHeaders>
        <HTTPHeaderEntity name="Host" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>ZGlwZXJmLXdmMWY1MjIxNC5kaXNwYXRjaGVyLmludC5zYXAuaGFuYS5vbmRlbWFuZC5jb20=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Connection" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>a2VlcC1hbGl2ZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="User-Agent" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzYxLjAuMzE2My4xMDAgU2FmYXJpLzUzNy4zNg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Ki8q</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Referer" index="4">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>aHR0cHM6Ly9kaXBlcmYtd2YxZjUyMjE0LmRpc3BhdGNoZXIuaW50LnNhcC5oYW5hLm9uZGVtYW5kLmNvbS8=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Encoding" index="5">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Z3ppcCwgZGVmbGF0ZSwgYnI=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Language" index="6">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>ZW4tVVMsaGUtSUw7cT0wLjgsaGU7cT0wLjYsZW47cT0wLjQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Cookie" index="7">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>QklHaXBTZXJ2ZXJkaXNwYXRjaGVyLmludC5zYXAuaGFuYS5vbmRlbWFuZC5jb209IUpvcWRucjd0eDdsdjJpOGp3OXZsamlTdXhpZGpNdTFXOGcxUDZGYUhNNkZIcFhkYnk3cjFJNXNaUU94azEvY3pFcEFmeFpjbGpxeW9Hdz09OyBKU0VTU0lPTklEPTk0MUNGQTU1QTkwRjE5ODc1QTkyMDhFMUFCRTE4QUVCM0NEQjA1OTZDOTdEMzU5MTMyNTE1Q0E3QjYzMDVDMjM7IEpURU5BTlRTRVNTSU9OSURfd2YxZjUyMjE0PXNBcVZxT2dyam8wOEhlSGNhR2ZIcVRLNSUyQjdxNlh2d1paMHBHT3NJSXRNUSUzRDsgX3N3YV9yZWYuN2E3YWIyZmUtM2NmOS00ZWFiLTg5MmEtOWRjODBjYWQwY2E1LjAwNzk9JTVCJTIyJTIyJTJDJTIyJTIyJTJDMTUwNjQyMzkwMSUyQyUyMmh0dHAlM0ElMkYlMkYxMC4yNi4xNTYuMTI1JTNBNTAwMDAlMkZzYW1sMiUyRmlkcCUyRnNzbyUyMiU1RDsgX3BrX2lkLjdhN2FiMmZlLTNjZjktNGVhYi04OTJhLTlkYzgwY2FkMGNhNS4wMDc5PTVkODc0MzhiNTc1MzQ3N2MuMTUwNjQyMzkwMC4wLjE1MDY0MjM5NzQuLjsgX3N3YV9pZC43YTdhYjJmZS0zY2Y5LTRlYWItODkyYS05ZGM4MGNhZDBjYTUuMDA3OT03Y2QzMmI1YWYxZWE5MWEyLjE1MDY0MjM5MDEuMS4xNTA2NDI0MDM0LjE1MDY0MjM5MDEuOyBfc3dhX3Nlcy43YTdhYjJmZS0zY2Y5LTRlYWItODkyYS05ZGM4MGNhZDBjYTUuMDA3OT0q</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>R0VUIC9yZXNvdXJjZXMvfjVjZmRkYmE2YzRjOTNhOTU3NGRhODc5NWIyMzFkYjk3OTVlYzE1ZTF+L3NhcC93YXR0L2lkZXBsYXRmb3JtL3BsdWdpbi9hY2VlZGl0b3IvY29udHJvbC9saWIvYWNlLW5vY29uZmxpY3QvbW9kZS1qYXZhLmpzIEhUVFAvMS4xDQpIb3N0OiBkaXBlcmYtd2YxZjUyMjE0LmRpc3BhdGNoZXIuaW50LnNhcC5oYW5hLm9uZGVtYW5kLmNvbQ0KQ29ubmVjdGlvbjoga2VlcC1hbGl2ZQ0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzYxLjAuMzE2My4xMDAgU2FmYXJpLzUzNy4zNg0KQWNjZXB0OiAqLyoNClJlZmVyZXI6IGh0dHBzOi8vZGlwZXJmLXdmMWY1MjIxNC5kaXNwYXRjaGVyLmludC5zYXAuaGFuYS5vbmRlbWFuZC5jb20vDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUsIGJyDQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLVVTLGhlLUlMO3E9MC44LGhlO3E9MC42LGVuO3E9MC40DQpDb29raWU6IEJJR2lwU2VydmVyZGlzcGF0Y2hlci5pbnQuc2FwLmhhbmEub25kZW1hbmQuY29tPSFKb3FkbnI3dHg3bHYyaThqdzl2bGppU3V4aWRqTXUxVzhnMVA2RmFITTZGSHBYZGJ5N3IxSTVzWlFPeGsxL2N6RXBBZnhaY2xqcXlvR3c9PTsgSlNFU1NJT05JRD05NDFDRkE1NUE5MEYxOTg3NUE5MjA4RTFBQkUxOEFFQjNDREIwNTk2Qzk3RDM1OTEzMjUxNUNBN0I2MzA1QzIzOyBKVEVOQU5UU0VTU0lPTklEX3dmMWY1MjIxND1zQXFWcU9ncmpvMDhIZUhjYUdmSHFUSzUlMkI3cTZYdndaWjBwR09zSUl0TVElM0Q7IF9zd2FfcmVmLjdhN2FiMmZlLTNjZjktNGVhYi04OTJhLTlkYzgwY2FkMGNhNS4wMDc5PSU1QiUyMiUyMiUyQyUyMiUyMiUyQzE1MDY0MjM5MDElMkMlMjJodHRwJTNBJTJGJTJGMTAuMjYuMTU2LjEyNSUzQTUwMDAwJTJGc2FtbDIlMkZpZHAlMkZzc28lMjIlNUQ7IF9wa19pZC43YTdhYjJmZS0zY2Y5LTRlYWItODkyYS05ZGM4MGNhZDBjYTUuMDA3OT01ZDg3NDM4YjU3NTM0NzdjLjE1MDY0MjM5MDAuMC4xNTA2NDIzOTc0Li47IF9zd2FfaWQuN2E3YWIyZmUtM2NmOS00ZWFiLTg5MmEtOWRjODBjYWQwY2E1LjAwNzk9N2NkMzJiNWFmMWVhOTFhMi4xNTA2NDIzOTAxLjEuMTUwNjQyNDAzNC4xNTA2NDIzOTAxLjsgX3N3YV9zZXMuN2E3YWIyZmUtM2NmOS00ZWFiLTg5MmEtOWRjODBjYWQwY2E1LjAwNzk9Kg0KDQo=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
        <HTTPCookies>
          <HTTPHeaderEntity name="BIGipServerdispatcher.int.sap.hana.ondemand.com" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>IUpvcWRucjd0eDdsdjJpOGp3OXZsamlTdXhpZGpNdTFXOGcxUDZGYUhNNkZIcFhkYnk3cjFJNXNaUU94azEvY3pFcEFmeFpjbGpxeW9Hdz09</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="JSESSIONID" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>OTQxQ0ZBNTVBOTBGMTk4NzVBOTIwOEUxQUJFMThBRUIzQ0RCMDU5NkM5N0QzNTkxMzI1MTVDQTdCNjMwNUMyMw==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="JTENANTSESSIONID_wf1f52214" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>c0FxVnFPZ3JqbzA4SGVIY2FHZkhxVEs1JTJCN3E2WHZ3WlowcEdPc0lJdE1RJTNE</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="_swa_ref.7a7ab2fe-3cf9-4eab-892a-9dc80cad0ca5.0079" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>JTVCJTIyJTIyJTJDJTIyJTIyJTJDMTUwNjQyMzkwMSUyQyUyMmh0dHAlM0ElMkYlMkYxMC4yNi4xNTYuMTI1JTNBNTAwMDAlMkZzYW1sMiUyRmlkcCUyRnNzbyUyMiU1RA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="_pk_id.7a7ab2fe-3cf9-4eab-892a-9dc80cad0ca5.0079" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>NWQ4NzQzOGI1NzUzNDc3Yy4xNTA2NDIzOTAwLjAuMTUwNjQyMzk3NC4u</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="_swa_id.7a7ab2fe-3cf9-4eab-892a-9dc80cad0ca5.0079" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>N2NkMzJiNWFmMWVhOTFhMi4xNTA2NDIzOTAxLjEuMTUwNjQyNDAzNC4xNTA2NDIzOTAxLg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="_swa_ses.7a7ab2fe-3cf9-4eab-892a-9dc80cad0ca5.0079" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Kg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
        </HTTPCookies>
      </HTTPHeaders>
    </HTTPRequest>
    <HTTPResponse>
      <HTTPHeaders>
        <HTTPHeaderEntity name="Cache-Control" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>cHVibGljLCBtYXgtYWdlPTMxNTM2MDAw</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="ETag" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>NWNmZGRiYTZjNGM5M2E5NTc0ZGE4Nzk1YjIzMWRiOTc5NWVjMTVlMQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Type" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>YXBwbGljYXRpb24vamF2YXNjcmlwdA==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Transfer-Encoding" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Y2h1bmtlZA==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Encoding" index="4">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Z3ppcA==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Vary" index="5">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>QWNjZXB0LUVuY29kaW5n</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Date" index="6">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>VHVlLCAyNiBTZXAgMjAxNyAxMTowOToyNiBHTVQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Server" index="7">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>U0FQ</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Strict-Transport-Security" index="8">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bWF4LWFnZT0zMTUzNjAwMDsgaW5jbHVkZVN1YkRvbWFpbnM7IHByZWxvYWQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>SFRUUC8xLjEgMjAwIE9LDQpDYWNoZS1Db250cm9sOiBwdWJsaWMsIG1heC1hZ2U9MzE1MzYwMDANCkVUYWc6IDVjZmRkYmE2YzRjOTNhOTU3NGRhODc5NWIyMzFkYjk3OTVlYzE1ZTENCkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vamF2YXNjcmlwdA0KVHJhbnNmZXItRW5jb2Rpbmc6IGNodW5rZWQNCkNvbnRlbnQtRW5jb2Rpbmc6IGd6aXANClZhcnk6IEFjY2VwdC1FbmNvZGluZw0KRGF0ZTogVHVlLCAyNiBTZXAgMjAxNyAxMTowOToyNiBHTVQNClNlcnZlcjogU0FQDQpTdHJpY3QtVHJhbnNwb3J0LVNlY3VyaXR5OiBtYXgtYWdlPTMxNTM2MDAwOyBpbmNsdWRlU3ViRG9tYWluczsgcHJlbG9hZA0KDQo=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
      </HTTPHeaders>
      <HTTPBody>
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData></ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPBody>
      <TcpPackets>
        <PacketInfo time="2531674266" offset="0" length="9073" />
        <PacketInfo time="2531674282" offset="9073" length="2754" />
      </TcpPackets>
    </HTTPResponse>
  </HTTPTask>
</HTTPSnapshot>